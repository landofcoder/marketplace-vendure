import {MigrationInterface, QueryRunner} from "typeorm";

export class shipping1601888873406 implements MigrationInterface {

   public async up(queryRunner: QueryRunner): Promise<any> {
        await queryRunner.query(`DROP INDEX "IDX_9a5a6a556f75c4ac7bfdd03410"`, undefined);
        await queryRunner.query(`DROP INDEX "IDX_d8791f444a8bf23fe4c1bc020c"`, undefined);
        await queryRunner.query(`DROP INDEX "IDX_6fb55742e13e8082954d0436dc"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_order_item" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "unitPrice" integer NOT NULL, "unitPriceIncludesTax" boolean NOT NULL, "taxRate" decimal(5,2) NOT NULL, "pendingAdjustments" text NOT NULL, "cancelled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "fulfillmentId" integer, "refundId" integer, "lineId" integer, CONSTRAINT "FK_3e5161133689fba526377cbccd3" FOREIGN KEY ("refundId") REFERENCES "refund" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_eed51be48640c21e1c76d3e9fbe" FOREIGN KEY ("fulfillmentId") REFERENCES "fulfillment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_69384323444206753f0cdeb64e0" FOREIGN KEY ("lineId") REFERENCES "order_line" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_order_item"("createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId") SELECT "createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId" FROM "order_item"`, undefined);
        await queryRunner.query(`DROP TABLE "order_item"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_order_item" RENAME TO "order_item"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_tax_rate" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "enabled" boolean NOT NULL, "value" decimal(5,2) NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "categoryId" integer, "zoneId" integer, "customerGroupId" integer, CONSTRAINT "FK_8b5ab52fc8887c1a769b9276caf" FOREIGN KEY ("customerGroupId") REFERENCES "customer_group" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9872fc7de2f4e532fd3230d1915" FOREIGN KEY ("zoneId") REFERENCES "zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_7ee3306d7638aa85ca90d672198" FOREIGN KEY ("categoryId") REFERENCES "tax_category" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_tax_rate"("createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId") SELECT "createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId" FROM "tax_rate"`, undefined);
        await queryRunner.query(`DROP TABLE "tax_rate"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_tax_rate" RENAME TO "tax_rate"`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_bank" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "account" varchar NOT NULL, "code" varchar NOT NULL, "address" varchar NOT NULL, "type" varchar NOT NULL, "isCheck" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "contactName" varchar NOT NULL, "pickupAddress" varchar NOT NULL, "email" varchar NOT NULL, "phone" varchar NOT NULL, "startTime" datetime NOT NULL, "endTime" datetime NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_info" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "brandName" varchar NOT NULL, "regAddress" varchar NOT NULL, "panno" varchar NOT NULL, "GSTINID" varchar NOT NULL, "state" varchar NOT NULL, "ADHAR" varchar NOT NULL, "aboutUs" varchar NOT NULL, "staffEmail" varchar NOT NULL, "phone" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_marketing_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "emailAddress" varchar NOT NULL, "phone" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`CREATE TABLE "package_entity" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "massUnit" varchar NOT NULL, "distanceUnit" varchar NOT NULL, "width" integer NOT NULL, "height" integer NOT NULL, "length" integer NOT NULL, "weight" integer NOT NULL, "enabled" boolean NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL)`, undefined);
        await queryRunner.query(`CREATE TABLE "shipping_packages_entity" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "packages" text NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "orderId" integer, CONSTRAINT "REL_85251f42eceb9a6c1b39084832" UNIQUE ("orderId"))`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_product" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "enabled" boolean NOT NULL DEFAULT (1), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "featuredAssetId" integer, "customFieldsReviewrating" double precision, "customFieldsReviewcount" double precision DEFAULT (0), "customFieldsProductrecommendationsenabled" boolean, "customFieldsIsinstock" boolean DEFAULT (1), "customFieldsWeight" double precision, "customFieldsLength" double precision, "customFieldsHeight" double precision, "customFieldsWidth" double precision, "customFieldsMassunit" varchar(255), "customFieldsDistanceunit" varchar(255), CONSTRAINT "FK_91a19e6613534949a4ce6e76ff8" FOREIGN KEY ("featuredAssetId") REFERENCES "asset" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_product"("createdAt", "updatedAt", "deletedAt", "enabled", "id", "featuredAssetId", "customFieldsReviewrating", "customFieldsReviewcount", "customFieldsProductrecommendationsenabled", "customFieldsIsinstock") SELECT "createdAt", "updatedAt", "deletedAt", "enabled", "id", "featuredAssetId", "customFieldsReviewrating", "customFieldsReviewcount", "customFieldsProductrecommendationsenabled", "customFieldsIsinstock" FROM "product"`, undefined);
        await queryRunner.query(`DROP TABLE "product"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_product" RENAME TO "product"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_vendor" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "userId" integer, "channelId" integer, "deletedAt" datetime, "firstName" varchar NOT NULL, "lastName" varchar NOT NULL, "email" varchar NOT NULL, "phone" varchar NOT NULL, "GSTINID" varchar NOT NULL, "state" varchar NOT NULL, "ownerName" varchar NOT NULL, "ownerEmail" varchar NOT NULL, "countryCode" varchar NOT NULL DEFAULT (''), "verified" boolean NOT NULL DEFAULT (0), CONSTRAINT "UQ_76a0a44ec8ee325d735dc5187dc" UNIQUE ("channelId"), CONSTRAINT "UQ_ac9f553292e6053115be74e4e59" UNIQUE ("userId"), CONSTRAINT "FK_76a0a44ec8ee325d735dc5187dc" FOREIGN KEY ("channelId") REFERENCES "channel" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_ac9f553292e6053115be74e4e59" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_vendor"("createdAt", "updatedAt", "id", "userId", "channelId") SELECT "createdAt", "updatedAt", "id", "userId", "channelId" FROM "vendor"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_vendor" RENAME TO "vendor"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_order_item" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "unitPrice" integer NOT NULL, "unitPriceIncludesTax" boolean NOT NULL, "taxRate" decimal(5,2) NOT NULL, "pendingAdjustments" text NOT NULL, "cancelled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "fulfillmentId" integer, "refundId" integer, "lineId" integer, CONSTRAINT "FK_3e5161133689fba526377cbccd3" FOREIGN KEY ("refundId") REFERENCES "refund" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_eed51be48640c21e1c76d3e9fbe" FOREIGN KEY ("fulfillmentId") REFERENCES "fulfillment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_69384323444206753f0cdeb64e0" FOREIGN KEY ("lineId") REFERENCES "order_line" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_order_item"("createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId") SELECT "createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId" FROM "order_item"`, undefined);
        await queryRunner.query(`DROP TABLE "order_item"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_order_item" RENAME TO "order_item"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_tax_rate" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "enabled" boolean NOT NULL, "value" decimal(5,2) NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "categoryId" integer, "zoneId" integer, "customerGroupId" integer, CONSTRAINT "FK_8b5ab52fc8887c1a769b9276caf" FOREIGN KEY ("customerGroupId") REFERENCES "customer_group" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9872fc7de2f4e532fd3230d1915" FOREIGN KEY ("zoneId") REFERENCES "zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_7ee3306d7638aa85ca90d672198" FOREIGN KEY ("categoryId") REFERENCES "tax_category" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_tax_rate"("createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId") SELECT "createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId" FROM "tax_rate"`, undefined);
        await queryRunner.query(`DROP TABLE "tax_rate"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_tax_rate" RENAME TO "tax_rate"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_product_review" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "summary" varchar NOT NULL, "body" text NOT NULL, "rating" integer NOT NULL, "authorName" varchar NOT NULL, "authorLocation" varchar, "upvotes" integer NOT NULL DEFAULT (0), "downvotes" integer NOT NULL DEFAULT (0), "state" varchar NOT NULL, "response" text, "responseCreatedAt" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "productId" integer, "productVariantId" integer, "authorId" integer, CONSTRAINT "FK_15a352d289533a11d67715d353a" FOREIGN KEY ("authorId") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_de987f9289b240e8702c9b8148e" FOREIGN KEY ("productVariantId") REFERENCES "product_variant" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_06e7335708b5e7870f1eaa608d2" FOREIGN KEY ("productId") REFERENCES "product" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_product_review"("createdAt", "updatedAt", "summary", "body", "rating", "authorName", "authorLocation", "upvotes", "downvotes", "state", "response", "responseCreatedAt", "id", "productId", "productVariantId", "authorId") SELECT "createdAt", "updatedAt", "summary", "body", "rating", "authorName", "authorLocation", "upvotes", "downvotes", "state", "response", "responseCreatedAt", "id", "productId", "productVariantId", "authorId" FROM "product_review"`, undefined);
        await queryRunner.query(`DROP TABLE "product_review"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_product_review" RENAME TO "product_review"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "subject" varchar NOT NULL, "message" varchar NOT NULL, "body" text NOT NULL, "authorName" varchar NOT NULL, "authorEmail" varchar NOT NULL, "authorPhone" varchar, "authorIp" varchar, "authorLocation" varchar, "state" varchar DEFAULT ('new'), "tags" varchar, "adminUserId" integer, "response" text, "error" text, "adminNote" text, "responseCreatedAt" datetime, "sentAt" datetime, "deletedAt" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "authorId" integer, "params" text, "vendorId" integer, CONSTRAINT "FK_16eddd250f9c60001ff77c18287" FOREIGN KEY ("authorId") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_contact"("createdAt", "updatedAt", "subject", "message", "body", "authorName", "authorEmail", "authorPhone", "authorIp", "authorLocation", "state", "tags", "adminUserId", "response", "error", "adminNote", "responseCreatedAt", "sentAt", "deletedAt", "id", "authorId", "params", "vendorId") SELECT "createdAt", "updatedAt", "subject", "message", "body", "authorName", "authorEmail", "authorPhone", "authorIp", "authorLocation", "state", "tags", "adminUserId", "response", "error", "adminNote", "responseCreatedAt", "sentAt", "deletedAt", "id", "authorId", "params", "vendorId" FROM "contact"`, undefined);
        await queryRunner.query(`DROP TABLE "contact"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_contact" RENAME TO "contact"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_subscriber" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "email" varchar NOT NULL, "subscriberToken" varchar, "type" varchar DEFAULT ('guest'), "customerFirstName" varchar, "customerLastName" varchar, "customerPhone" varchar, "status" varchar DEFAULT ('subscribed'), "tags" varchar, "params" text, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "authorId" integer, "gender" varchar, CONSTRAINT "FK_09af8620848654794f2f47df559" FOREIGN KEY ("authorId") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_subscriber"("createdAt", "updatedAt", "email", "subscriberToken", "type", "customerFirstName", "customerLastName", "customerPhone", "status", "tags", "params", "id", "authorId", "gender") SELECT "createdAt", "updatedAt", "email", "subscriberToken", "type", "customerFirstName", "customerLastName", "customerPhone", "status", "tags", "params", "id", "authorId", "gender" FROM "subscriber"`, undefined);
        await queryRunner.query(`DROP TABLE "subscriber"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_subscriber" RENAME TO "subscriber"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_newsletter" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "template_name" varchar NOT NULL, "customerGroupId" integer DEFAULT (0), "subject" varchar DEFAULT ('The Store Newsletter'), "templateContent" text, "templateCss" text, "status" integer DEFAULT (1), "priority" integer DEFAULT (0), "type" varchar DEFAULT ('html'), "params" text, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_newsletter"("createdAt", "updatedAt", "template_name", "customerGroupId", "subject", "templateContent", "templateCss", "status", "priority", "type", "params", "id") SELECT "createdAt", "updatedAt", "template_name", "customerGroupId", "subject", "templateContent", "templateCss", "status", "priority", "type", "params", "id" FROM "newsletter"`, undefined);
        await queryRunner.query(`DROP TABLE "newsletter"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_newsletter" RENAME TO "newsletter"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_newsletter_queue" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "templateId" integer DEFAULT (0), "newsletter_subject" varchar DEFAULT ('Newsletter Subject'), "newsletter_template_name" varchar DEFAULT (''), "newsletter_text" text, "newsletter_styles" text, "newsletter_params" text, "queue_status" integer DEFAULT (1), "queue_start_at" datetime, "queue_finish_at" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_newsletter_queue"("createdAt", "updatedAt", "templateId", "newsletter_subject", "newsletter_template_name", "newsletter_text", "newsletter_styles", "newsletter_params", "queue_status", "queue_start_at", "queue_finish_at", "id") SELECT "createdAt", "updatedAt", "templateId", "newsletter_subject", "newsletter_template_name", "newsletter_text", "newsletter_styles", "newsletter_params", "queue_status", "queue_start_at", "queue_finish_at", "id" FROM "newsletter_queue"`, undefined);
        await queryRunner.query(`DROP TABLE "newsletter_queue"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_newsletter_queue" RENAME TO "newsletter_queue"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_newsletter_queue_link" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "letter_sent_at" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "queueId" integer, "subscriberId" integer, CONSTRAINT "FK_3b6f961223d186ba136b8f397b0" FOREIGN KEY ("queueId") REFERENCES "newsletter_queue" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_fd0e8661a6282b0b014ef6b56ec" FOREIGN KEY ("subscriberId") REFERENCES "subscriber" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_newsletter_queue_link"("createdAt", "updatedAt", "letter_sent_at", "id", "queueId", "subscriberId") SELECT "createdAt", "updatedAt", "letter_sent_at", "id", "queueId", "subscriberId" FROM "newsletter_queue_link"`, undefined);
        await queryRunner.query(`DROP TABLE "newsletter_queue_link"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_newsletter_queue_link" RENAME TO "newsletter_queue_link"`, undefined);
        await queryRunner.query(`CREATE INDEX "IDX_6fb55742e13e8082954d0436dc" ON "search_index_item" ("productName") `, undefined);
        await queryRunner.query(`CREATE INDEX "IDX_d8791f444a8bf23fe4c1bc020c" ON "search_index_item" ("productVariantName") `, undefined);
        await queryRunner.query(`CREATE INDEX "IDX_9a5a6a556f75c4ac7bfdd03410" ON "search_index_item" ("description") `, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_vendor_bank" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "account" varchar NOT NULL, "code" varchar NOT NULL, "address" varchar NOT NULL, "type" varchar NOT NULL, "isCheck" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer, CONSTRAINT "FK_7d448790edc93adc990fa3a0a15" FOREIGN KEY ("vendorId") REFERENCES "vendor" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_vendor_bank"("createdAt", "updatedAt", "account", "code", "address", "type", "isCheck", "id", "vendorId") SELECT "createdAt", "updatedAt", "account", "code", "address", "type", "isCheck", "id", "vendorId" FROM "vendor_bank"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_bank"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_vendor_bank" RENAME TO "vendor_bank"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_vendor_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "contactName" varchar NOT NULL, "pickupAddress" varchar NOT NULL, "email" varchar NOT NULL, "phone" varchar NOT NULL, "startTime" datetime NOT NULL, "endTime" datetime NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer, CONSTRAINT "FK_4902def964a93d3cf0384e2c3a2" FOREIGN KEY ("vendorId") REFERENCES "vendor" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_vendor_contact"("createdAt", "updatedAt", "contactName", "pickupAddress", "email", "phone", "startTime", "endTime", "id", "vendorId") SELECT "createdAt", "updatedAt", "contactName", "pickupAddress", "email", "phone", "startTime", "endTime", "id", "vendorId" FROM "vendor_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_contact"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_vendor_contact" RENAME TO "vendor_contact"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_vendor_info" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "brandName" varchar NOT NULL, "regAddress" varchar NOT NULL, "panno" varchar NOT NULL, "GSTINID" varchar NOT NULL, "state" varchar NOT NULL, "ADHAR" varchar NOT NULL, "aboutUs" varchar NOT NULL, "staffEmail" varchar NOT NULL, "phone" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer, CONSTRAINT "FK_74ca280c5a59794edcdbba5a940" FOREIGN KEY ("vendorId") REFERENCES "vendor" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_vendor_info"("createdAt", "updatedAt", "brandName", "regAddress", "panno", "GSTINID", "state", "ADHAR", "aboutUs", "staffEmail", "phone", "id", "vendorId") SELECT "createdAt", "updatedAt", "brandName", "regAddress", "panno", "GSTINID", "state", "ADHAR", "aboutUs", "staffEmail", "phone", "id", "vendorId" FROM "vendor_info"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_info"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_vendor_info" RENAME TO "vendor_info"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_vendor_marketing_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "emailAddress" varchar NOT NULL, "phone" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer, CONSTRAINT "FK_18016c7dd53dc00afc56106b015" FOREIGN KEY ("vendorId") REFERENCES "vendor" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_vendor_marketing_contact"("createdAt", "updatedAt", "name", "emailAddress", "phone", "id", "vendorId") SELECT "createdAt", "updatedAt", "name", "emailAddress", "phone", "id", "vendorId" FROM "vendor_marketing_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_marketing_contact"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_vendor_marketing_contact" RENAME TO "vendor_marketing_contact"`, undefined);
        await queryRunner.query(`CREATE TABLE "temporary_shipping_packages_entity" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "packages" text NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "orderId" integer, CONSTRAINT "REL_85251f42eceb9a6c1b39084832" UNIQUE ("orderId"), CONSTRAINT "FK_85251f42eceb9a6c1b390848323" FOREIGN KEY ("orderId") REFERENCES "order" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "temporary_shipping_packages_entity"("createdAt", "updatedAt", "packages", "id", "orderId") SELECT "createdAt", "updatedAt", "packages", "id", "orderId" FROM "shipping_packages_entity"`, undefined);
        await queryRunner.query(`DROP TABLE "shipping_packages_entity"`, undefined);
        await queryRunner.query(`ALTER TABLE "temporary_shipping_packages_entity" RENAME TO "shipping_packages_entity"`, undefined);
   }

   public async down(queryRunner: QueryRunner): Promise<any> {
        await queryRunner.query(`ALTER TABLE "shipping_packages_entity" RENAME TO "temporary_shipping_packages_entity"`, undefined);
        await queryRunner.query(`CREATE TABLE "shipping_packages_entity" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "packages" text NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "orderId" integer, CONSTRAINT "REL_85251f42eceb9a6c1b39084832" UNIQUE ("orderId"))`, undefined);
        await queryRunner.query(`INSERT INTO "shipping_packages_entity"("createdAt", "updatedAt", "packages", "id", "orderId") SELECT "createdAt", "updatedAt", "packages", "id", "orderId" FROM "temporary_shipping_packages_entity"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_shipping_packages_entity"`, undefined);
        await queryRunner.query(`ALTER TABLE "vendor_marketing_contact" RENAME TO "temporary_vendor_marketing_contact"`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_marketing_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "emailAddress" varchar NOT NULL, "phone" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`INSERT INTO "vendor_marketing_contact"("createdAt", "updatedAt", "name", "emailAddress", "phone", "id", "vendorId") SELECT "createdAt", "updatedAt", "name", "emailAddress", "phone", "id", "vendorId" FROM "temporary_vendor_marketing_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_vendor_marketing_contact"`, undefined);
        await queryRunner.query(`ALTER TABLE "vendor_info" RENAME TO "temporary_vendor_info"`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_info" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "brandName" varchar NOT NULL, "regAddress" varchar NOT NULL, "panno" varchar NOT NULL, "GSTINID" varchar NOT NULL, "state" varchar NOT NULL, "ADHAR" varchar NOT NULL, "aboutUs" varchar NOT NULL, "staffEmail" varchar NOT NULL, "phone" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`INSERT INTO "vendor_info"("createdAt", "updatedAt", "brandName", "regAddress", "panno", "GSTINID", "state", "ADHAR", "aboutUs", "staffEmail", "phone", "id", "vendorId") SELECT "createdAt", "updatedAt", "brandName", "regAddress", "panno", "GSTINID", "state", "ADHAR", "aboutUs", "staffEmail", "phone", "id", "vendorId" FROM "temporary_vendor_info"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_vendor_info"`, undefined);
        await queryRunner.query(`ALTER TABLE "vendor_contact" RENAME TO "temporary_vendor_contact"`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "contactName" varchar NOT NULL, "pickupAddress" varchar NOT NULL, "email" varchar NOT NULL, "phone" varchar NOT NULL, "startTime" datetime NOT NULL, "endTime" datetime NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`INSERT INTO "vendor_contact"("createdAt", "updatedAt", "contactName", "pickupAddress", "email", "phone", "startTime", "endTime", "id", "vendorId") SELECT "createdAt", "updatedAt", "contactName", "pickupAddress", "email", "phone", "startTime", "endTime", "id", "vendorId" FROM "temporary_vendor_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_vendor_contact"`, undefined);
        await queryRunner.query(`ALTER TABLE "vendor_bank" RENAME TO "temporary_vendor_bank"`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor_bank" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "account" varchar NOT NULL, "code" varchar NOT NULL, "address" varchar NOT NULL, "type" varchar NOT NULL, "isCheck" varchar NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "vendorId" integer)`, undefined);
        await queryRunner.query(`INSERT INTO "vendor_bank"("createdAt", "updatedAt", "account", "code", "address", "type", "isCheck", "id", "vendorId") SELECT "createdAt", "updatedAt", "account", "code", "address", "type", "isCheck", "id", "vendorId" FROM "temporary_vendor_bank"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_vendor_bank"`, undefined);
        await queryRunner.query(`DROP INDEX "IDX_9a5a6a556f75c4ac7bfdd03410"`, undefined);
        await queryRunner.query(`DROP INDEX "IDX_d8791f444a8bf23fe4c1bc020c"`, undefined);
        await queryRunner.query(`DROP INDEX "IDX_6fb55742e13e8082954d0436dc"`, undefined);
        await queryRunner.query(`ALTER TABLE "newsletter_queue_link" RENAME TO "temporary_newsletter_queue_link"`, undefined);
        await queryRunner.query(`CREATE TABLE "newsletter_queue_link" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "letter_sent_at" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "queueId" integer, "subscriberId" integer, CONSTRAINT "FK_3b6f961223d186ba136b8f397b0" FOREIGN KEY ("queueId") REFERENCES "newsletter_queue" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_fd0e8661a6282b0b014ef6b56ec" FOREIGN KEY ("subscriberId") REFERENCES "subscriber" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "newsletter_queue_link"("createdAt", "updatedAt", "letter_sent_at", "id", "queueId", "subscriberId") SELECT "createdAt", "updatedAt", "letter_sent_at", "id", "queueId", "subscriberId" FROM "temporary_newsletter_queue_link"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_newsletter_queue_link"`, undefined);
        await queryRunner.query(`ALTER TABLE "newsletter_queue" RENAME TO "temporary_newsletter_queue"`, undefined);
        await queryRunner.query(`CREATE TABLE "newsletter_queue" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "templateId" integer DEFAULT (0), "newsletter_subject" varchar DEFAULT ('Newsletter Subject'), "newsletter_template_name" varchar DEFAULT (''), "newsletter_text" text, "newsletter_styles" text, "newsletter_params" text, "queue_status" integer DEFAULT (1), "queue_start_at" datetime, "queue_finish_at" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL)`, undefined);
        await queryRunner.query(`INSERT INTO "newsletter_queue"("createdAt", "updatedAt", "templateId", "newsletter_subject", "newsletter_template_name", "newsletter_text", "newsletter_styles", "newsletter_params", "queue_status", "queue_start_at", "queue_finish_at", "id") SELECT "createdAt", "updatedAt", "templateId", "newsletter_subject", "newsletter_template_name", "newsletter_text", "newsletter_styles", "newsletter_params", "queue_status", "queue_start_at", "queue_finish_at", "id" FROM "temporary_newsletter_queue"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_newsletter_queue"`, undefined);
        await queryRunner.query(`ALTER TABLE "newsletter" RENAME TO "temporary_newsletter"`, undefined);
        await queryRunner.query(`CREATE TABLE "newsletter" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "template_name" varchar NOT NULL, "customerGroupId" integer DEFAULT (0), "subject" varchar DEFAULT ('The Store Newsletter'), "templateContent" text, "templateCss" text, "status" integer DEFAULT (1), "priority" integer DEFAULT (0), "type" varchar DEFAULT ('html'), "params" text, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL)`, undefined);
        await queryRunner.query(`INSERT INTO "newsletter"("createdAt", "updatedAt", "template_name", "customerGroupId", "subject", "templateContent", "templateCss", "status", "priority", "type", "params", "id") SELECT "createdAt", "updatedAt", "template_name", "customerGroupId", "subject", "templateContent", "templateCss", "status", "priority", "type", "params", "id" FROM "temporary_newsletter"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_newsletter"`, undefined);
        await queryRunner.query(`ALTER TABLE "subscriber" RENAME TO "temporary_subscriber"`, undefined);
        await queryRunner.query(`CREATE TABLE "subscriber" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "email" varchar NOT NULL, "subscriberToken" varchar, "type" varchar DEFAULT ('guest'), "customerFirstName" varchar, "customerLastName" varchar, "customerPhone" varchar, "status" varchar DEFAULT ('subscribed'), "tags" varchar, "params" text, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "authorId" integer, "gender" varchar, CONSTRAINT "FK_09af8620848654794f2f47df559" FOREIGN KEY ("authorId") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "subscriber"("createdAt", "updatedAt", "email", "subscriberToken", "type", "customerFirstName", "customerLastName", "customerPhone", "status", "tags", "params", "id", "authorId", "gender") SELECT "createdAt", "updatedAt", "email", "subscriberToken", "type", "customerFirstName", "customerLastName", "customerPhone", "status", "tags", "params", "id", "authorId", "gender" FROM "temporary_subscriber"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_subscriber"`, undefined);
        await queryRunner.query(`ALTER TABLE "contact" RENAME TO "temporary_contact"`, undefined);
        await queryRunner.query(`CREATE TABLE "contact" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "subject" varchar NOT NULL, "message" varchar NOT NULL, "body" text NOT NULL, "authorName" varchar NOT NULL, "authorEmail" varchar NOT NULL, "authorPhone" varchar, "authorIp" varchar, "authorLocation" varchar, "state" varchar DEFAULT ('new'), "tags" varchar, "adminUserId" integer, "response" text, "error" text, "adminNote" text, "responseCreatedAt" datetime, "sentAt" datetime, "deletedAt" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "authorId" integer, "params" text, "vendorId" integer, CONSTRAINT "FK_16eddd250f9c60001ff77c18287" FOREIGN KEY ("authorId") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "contact"("createdAt", "updatedAt", "subject", "message", "body", "authorName", "authorEmail", "authorPhone", "authorIp", "authorLocation", "state", "tags", "adminUserId", "response", "error", "adminNote", "responseCreatedAt", "sentAt", "deletedAt", "id", "authorId", "params", "vendorId") SELECT "createdAt", "updatedAt", "subject", "message", "body", "authorName", "authorEmail", "authorPhone", "authorIp", "authorLocation", "state", "tags", "adminUserId", "response", "error", "adminNote", "responseCreatedAt", "sentAt", "deletedAt", "id", "authorId", "params", "vendorId" FROM "temporary_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_contact"`, undefined);
        await queryRunner.query(`ALTER TABLE "product_review" RENAME TO "temporary_product_review"`, undefined);
        await queryRunner.query(`CREATE TABLE "product_review" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "summary" varchar NOT NULL, "body" text NOT NULL, "rating" integer NOT NULL, "authorName" varchar NOT NULL, "authorLocation" varchar, "upvotes" integer NOT NULL DEFAULT (0), "downvotes" integer NOT NULL DEFAULT (0), "state" varchar NOT NULL, "response" text, "responseCreatedAt" datetime, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "productId" integer, "productVariantId" integer, "authorId" integer, CONSTRAINT "FK_15a352d289533a11d67715d353a" FOREIGN KEY ("authorId") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_de987f9289b240e8702c9b8148e" FOREIGN KEY ("productVariantId") REFERENCES "product_variant" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_06e7335708b5e7870f1eaa608d2" FOREIGN KEY ("productId") REFERENCES "product" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "product_review"("createdAt", "updatedAt", "summary", "body", "rating", "authorName", "authorLocation", "upvotes", "downvotes", "state", "response", "responseCreatedAt", "id", "productId", "productVariantId", "authorId") SELECT "createdAt", "updatedAt", "summary", "body", "rating", "authorName", "authorLocation", "upvotes", "downvotes", "state", "response", "responseCreatedAt", "id", "productId", "productVariantId", "authorId" FROM "temporary_product_review"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_product_review"`, undefined);
        await queryRunner.query(`ALTER TABLE "tax_rate" RENAME TO "temporary_tax_rate"`, undefined);
        await queryRunner.query(`CREATE TABLE "tax_rate" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "enabled" boolean NOT NULL, "value" decimal(5,2) NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "categoryId" integer, "zoneId" integer, "customerGroupId" integer, CONSTRAINT "FK_8b5ab52fc8887c1a769b9276caf" FOREIGN KEY ("customerGroupId") REFERENCES "customer_group" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9872fc7de2f4e532fd3230d1915" FOREIGN KEY ("zoneId") REFERENCES "zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_7ee3306d7638aa85ca90d672198" FOREIGN KEY ("categoryId") REFERENCES "tax_category" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "tax_rate"("createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId") SELECT "createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId" FROM "temporary_tax_rate"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_tax_rate"`, undefined);
        await queryRunner.query(`ALTER TABLE "order_item" RENAME TO "temporary_order_item"`, undefined);
        await queryRunner.query(`CREATE TABLE "order_item" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "unitPrice" integer NOT NULL, "unitPriceIncludesTax" boolean NOT NULL, "taxRate" decimal(5,2) NOT NULL, "pendingAdjustments" text NOT NULL, "cancelled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "fulfillmentId" integer, "refundId" integer, "lineId" integer, CONSTRAINT "FK_3e5161133689fba526377cbccd3" FOREIGN KEY ("refundId") REFERENCES "refund" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_eed51be48640c21e1c76d3e9fbe" FOREIGN KEY ("fulfillmentId") REFERENCES "fulfillment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_69384323444206753f0cdeb64e0" FOREIGN KEY ("lineId") REFERENCES "order_line" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "order_item"("createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId") SELECT "createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId" FROM "temporary_order_item"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_order_item"`, undefined);
        await queryRunner.query(`ALTER TABLE "vendor" RENAME TO "temporary_vendor"`, undefined);
        await queryRunner.query(`CREATE TABLE "vendor" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "userId" integer, "channelId" integer, CONSTRAINT "UQ_76a0a44ec8ee325d735dc5187dc" UNIQUE ("channelId"), CONSTRAINT "UQ_ac9f553292e6053115be74e4e59" UNIQUE ("userId"), CONSTRAINT "FK_76a0a44ec8ee325d735dc5187dc" FOREIGN KEY ("channelId") REFERENCES "channel" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_ac9f553292e6053115be74e4e59" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "vendor"("createdAt", "updatedAt", "id", "userId", "channelId") SELECT "createdAt", "updatedAt", "id", "userId", "channelId" FROM "temporary_vendor"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_vendor"`, undefined);
        await queryRunner.query(`ALTER TABLE "product" RENAME TO "temporary_product"`, undefined);
        await queryRunner.query(`CREATE TABLE "product" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "enabled" boolean NOT NULL DEFAULT (1), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "featuredAssetId" integer, "customFieldsReviewrating" double precision, "customFieldsReviewcount" double precision DEFAULT (0), "customFieldsProductrecommendationsenabled" boolean, "customFieldsIsinstock" boolean DEFAULT (1), CONSTRAINT "FK_91a19e6613534949a4ce6e76ff8" FOREIGN KEY ("featuredAssetId") REFERENCES "asset" ("id") ON DELETE SET NULL ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "product"("createdAt", "updatedAt", "deletedAt", "enabled", "id", "featuredAssetId", "customFieldsReviewrating", "customFieldsReviewcount", "customFieldsProductrecommendationsenabled", "customFieldsIsinstock") SELECT "createdAt", "updatedAt", "deletedAt", "enabled", "id", "featuredAssetId", "customFieldsReviewrating", "customFieldsReviewcount", "customFieldsProductrecommendationsenabled", "customFieldsIsinstock" FROM "temporary_product"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_product"`, undefined);
        await queryRunner.query(`DROP TABLE "shipping_packages_entity"`, undefined);
        await queryRunner.query(`DROP TABLE "package_entity"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_marketing_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_info"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_contact"`, undefined);
        await queryRunner.query(`DROP TABLE "vendor_bank"`, undefined);
        await queryRunner.query(`ALTER TABLE "tax_rate" RENAME TO "temporary_tax_rate"`, undefined);
        await queryRunner.query(`CREATE TABLE "tax_rate" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "name" varchar NOT NULL, "enabled" boolean NOT NULL, "value" decimal(5,2) NOT NULL, "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "categoryId" integer, "zoneId" integer, "customerGroupId" integer, CONSTRAINT "FK_8b5ab52fc8887c1a769b9276caf" FOREIGN KEY ("customerGroupId") REFERENCES "customer_group" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9872fc7de2f4e532fd3230d1915" FOREIGN KEY ("zoneId") REFERENCES "zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_7ee3306d7638aa85ca90d672198" FOREIGN KEY ("categoryId") REFERENCES "tax_category" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "tax_rate"("createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId") SELECT "createdAt", "updatedAt", "name", "enabled", "value", "id", "categoryId", "zoneId", "customerGroupId" FROM "temporary_tax_rate"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_tax_rate"`, undefined);
        await queryRunner.query(`ALTER TABLE "order_item" RENAME TO "temporary_order_item"`, undefined);
        await queryRunner.query(`CREATE TABLE "order_item" ("createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "unitPrice" integer NOT NULL, "unitPriceIncludesTax" boolean NOT NULL, "taxRate" decimal(5,2) NOT NULL, "pendingAdjustments" text NOT NULL, "cancelled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "fulfillmentId" integer, "refundId" integer, "lineId" integer, CONSTRAINT "FK_3e5161133689fba526377cbccd3" FOREIGN KEY ("refundId") REFERENCES "refund" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_eed51be48640c21e1c76d3e9fbe" FOREIGN KEY ("fulfillmentId") REFERENCES "fulfillment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_69384323444206753f0cdeb64e0" FOREIGN KEY ("lineId") REFERENCES "order_line" ("id") ON DELETE CASCADE ON UPDATE NO ACTION)`, undefined);
        await queryRunner.query(`INSERT INTO "order_item"("createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId") SELECT "createdAt", "updatedAt", "unitPrice", "unitPriceIncludesTax", "taxRate", "pendingAdjustments", "cancelled", "id", "fulfillmentId", "refundId", "lineId" FROM "temporary_order_item"`, undefined);
        await queryRunner.query(`DROP TABLE "temporary_order_item"`, undefined);
        await queryRunner.query(`CREATE INDEX "IDX_6fb55742e13e8082954d0436dc" ON "search_index_item" ("productName") `, undefined);
        await queryRunner.query(`CREATE INDEX "IDX_d8791f444a8bf23fe4c1bc020c" ON "search_index_item" ("productVariantName") `, undefined);
        await queryRunner.query(`CREATE INDEX "IDX_9a5a6a556f75c4ac7bfdd03410" ON "search_index_item" ("description") `, undefined);
   }

}
